../src/guis/cad_ui:        okButton = wx.Button(self, label='スピンドル始動')
../src/guis/fab:format_text = wx.StaticText(frame,label="フォーマット")
../src/guis/fab:process_text = wx.StaticText(frame,label="プロセス")
../src/guis/fab:program_text = wx.StaticText(frame,label="プログラム")
../src/guis/fab:frame.programs = wx.Button(frame,label='プログラム')
../src/guis/fab:control_sizer.Add(wx.StaticText(control_panel,label='画面サイズ (ピクセル数)'),(0,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/guis/fab:control_sizer.Add(wx.StaticText(control_panel,label="Fab modules バージョン: "+date),(0,2),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/guis/fab:control_quit = wx.Button(control_panel,label='終了')
../src/guis/fab:control_sizer.Add(wx.StaticText(control_panel,label=" "),(0,5),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/guis/rml_send_gui:        origin_label = wx.StaticText(right_panel, label="原点:")
../src/guis/rml_send_gui:        self.origin_label_x = wx.StaticText(right_panel, label="x: ")
../src/guis/rml_send_gui:        self.origin_label_y = wx.StaticText(right_panel, label="y: ")
../src/guis/rml_send_gui:        size_label = wx.StaticText(right_panel, label="サイズ:")
../src/guis/rml_send_gui:        self.size_label_x = wx.StaticText(right_panel, label="x: ")
../src/guis/rml_send_gui:        self.size_label_y = wx.StaticText(right_panel, label="y: ")
../src/guis/rml_send_gui:        size_label = wx.StaticText(right_panel, label="スピード:")
../src/guis/rml_send_gui:        self.plunge_label = wx.StaticText(right_panel, label="進入速度")
../src/guis/rml_send_gui:        self.feed_label = wx.StaticText(right_panel, label="送り速度:")
../src/guis/rml_send_gui:        size_label = wx.StaticText(right_panel, label="時間:")
../src/guis/rml_send_gui:        self.elapsed_label = wx.StaticText(right_panel, label="経過時間:")
../src/guis/rml_send_gui:        self.remaining_label = wx.StaticText(right_panel, label="残り時間:")
../src/guis/rml_send_gui:        self.start_button = wx.Button(right_panel, label="切削開始")
../src/guis/rml_send_gui:        self.status_label = wx.StaticText(self.frame, label="準備完了。")
../src/py/panel_cad.py:      label = wx.StaticText(self,label='cadを読み込み')
../src/py/panel_cad.py:      load = wx.Button(self,label='cadを読み込む')
../src/py/panel_cad.py:      rload = wx.Button(self,label='.cadを再読み込み')
../src/py/panel_cad.py:      save = wx.Button(self,label='.cadを保存')
../src/py/panel_cad_png.py:      label = wx.StaticText(self,label='pngに変換')
../src/py/panel_cad_png.py:      make = wx.Button(self,label='.pngを読み込む')
../src/py/panel_cad_png.py:      res_panel_sizer.Add(wx.StaticText(res_panel,label='解像度 (ピクセル数/mm)'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_cad_png.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_cad_stl.py:      label = wx.StaticText(self,label='stlに変換')
../src/py/panel_cad_stl.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_cad_stl.py:      make = wx.Button(self,label='.stlを読み込む')
../src/py/panel_cad_stl.py:      res_panel_sizer.Add(wx.StaticText(res_panel,label='解像度 (ピクセル数/mm)'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_cad_stl.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_control.py:      quit = wx.Button(self,label='終了')
../src/py/panel_math.py:      label = wx.StaticText(self,label='mathを読み込み')
../src/py/panel_math.py:      load = wx.Button(self,label='.mathを読み込む')
../src/py/panel_math.py:      rload = wx.Button(self,label='.mathを再読み込み')
../src/py/panel_math.py:      save = wx.Button(self,label='.mathを保存')
../src/py/panel_math_png.py:      label = wx.StaticText(self,label='pngに変換')
../src/py/panel_math_png.py:      make = wx.Button(self,label='.pngを読み込む')
../src/py/panel_math_png.py:      res_panel_sizer.Add(wx.StaticText(res_panel,label='解像度 (ピクセル数/mm)'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_math_png.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_math_stl.py:      label = wx.StaticText(self,label='stlに変換')
../src/py/panel_math_stl.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_math_stl.py:      make = wx.Button(self,label='.stlを読み込む')
../src/py/panel_math_stl.py:      res_panel_sizer.Add(wx.StaticText(res_panel,label='解像度 (ピクセル数/mm)'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_math_stl.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_path.py:      self.message = wx.StaticText(control_panel,label='')
../src/py/panel_path.py:      reset_button = wx.Button(control_panel,label='描画をリセット')
../src/py/panel_path_camm.py:      label = wx.StaticText(self,label='cammに変換')
../src/py/panel_path_camm.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_camm.py:      make = wx.Button(self,label='.cammを読み込む')
../src/py/panel_path_camm.py:      force_sizer.Add(wx.StaticText(force_panel,label='力 (g)'),(0,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_camm.py:      force_sizer.Add(wx.StaticText(force_panel,label='速度 (cm/s)'),(1,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_camm.py:      origin_sizer.Add(wx.StaticText(origin_panel,label='上面'),(0,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_camm.py:      origin_sizer.Add(wx.StaticText(origin_panel,label='ｘ原点 (mm)'),(1,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_camm.py:      origin_sizer.Add(wx.StaticText(origin_panel,label='下面'),(2,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_dxf.py:      label = wx.StaticText(self,label='dxfに変換')
../src/py/panel_path_dxf.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_dxf.py:      make = wx.Button(self,label='.dxfを読み込む')
../src/py/panel_path_epi.py:      label = wx.StaticText(self,label='epiに変換')
../src/py/panel_path_epi.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_epi.py:      make = wx.Button(self,label='.epiを読み込む')
../src/py/panel_path_epi.py:      sizer_2D.Add(wx.StaticText(self.panel_2D,label='パワー(%)'),(1,0),span=(1,2),flag=wx.ALIGN_CENTER_HORIZONTAL)
../src/py/panel_path_epi.py:      set_sizer_2D.Add(wx.StaticText(set_panel_2D,label='スピード (%)'),(0,0),flag=wx.ALIGN_RIGHT)
../src/py/panel_path_epi.py:      set_sizer_2D.Add(wx.StaticText(set_panel_2D,label='割合'),(0,1),flag=wx.ALIGN_LEFT)
../src/py/panel_path_epi.py:      origin_sizer_2D.Add(wx.StaticText(origin_panel_2D,label='上面'),(0,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_epi.py:      origin_sizer_2D.Add(wx.StaticText(origin_panel_2D,label='ｘ原点 (mm)'),(1,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_epi.py:      origin_sizer_2D.Add(wx.StaticText(origin_panel_2D,label='下面'),(2,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_epi.py:      set_sizer_3D.Add(wx.StaticText(set_panel_3D,label='最小 z パワー (%)'),(0,0),flag=wx.ALIGN_RIGHT)
../src/py/panel_path_epi.py:      set_sizer_3D.Add(wx.StaticText(set_panel_3D,label='最大 z パワー (%)'),(0,1),flag=wx.ALIGN_LEFT)
../src/py/panel_path_epi.py:      set_sizer_3D.Add(wx.StaticText(set_panel_3D,label='スピード (%)'),(2,0),flag=wx.ALIGN_RIGHT)
../src/py/panel_path_epi.py:      set_sizer_3D.Add(wx.StaticText(set_panel_3D,label='割合'),(2,1),flag=wx.ALIGN_LEFT)
../src/py/panel_path_epi.py:      origin_sizer_3D.Add(wx.StaticText(origin_panel_3D,label='上面'),(0,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_epi.py:      origin_sizer_3D.Add(wx.StaticText(origin_panel_3D,label='ｘ原点 (mm)'),(1,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_epi.py:      origin_sizer_3D.Add(wx.StaticText(origin_panel_3D,label='下面'),(2,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_eps.py:      label = wx.StaticText(self,label='epsに変換')
../src/py/panel_path_eps.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_eps.py:      make = wx.Button(self,label='.epsを読み込む')
../src/py/panel_path_g.py:      label = wx.StaticText(self,label='gに変換')
../src/py/panel_path_g.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_g.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_path_g.py:      make = wx.Button(self,label='.gを読み込む')
../src/py/panel_path_g.py:      self.conv = wx.RadioButton(dir_panel,label='conventional',style=wx.RB_GROUP)
../src/py/panel_path_g.py:      self.climb = wx.RadioButton(dir_panel,label='climb')
../src/py/panel_path_g.py:      row5_sizer.Add(wx.StaticText(row5_panel,label='切削速度 (mm/s'),(0,0),flag=(wx.ALIGN_RIGHT))
../src/py/panel_path_g.py:      row5_sizer.Add(wx.StaticText(row5_panel,label='進入速度 (mm/s)'),(0,1),flag=(wx.ALIGN_LEFT))
../src/py/panel_path_g.py:      row7_sizer.Add(wx.StaticText(row7_panel,label='スピンドル速度 (RPM)'),(0,0),flag=(wx.ALIGN_RIGHT))
../src/py/panel_path_g.py:      row7_sizer.Add(wx.StaticText(row7_panel,label='ジョグの高さ (mm)'),(0,1),flag=(wx.ALIGN_LEFT))
../src/py/panel_path_g.py:      row9_sizer.Add(wx.StaticText(row9_panel,label='ツール番号'),(0,0),flag=(wx.ALIGN_RIGHT))
../src/py/panel_path_g.py:      row9_sizer.Add(wx.StaticText(row9_panel,label='冷却系'),(0,1),flag=(wx.ALIGN_LEFT))
../src/py/panel_path_g.py:      self.on = wx.RadioButton(coolant_panel,label='スピンドル始動',style=wx.RB_GROUP)
../src/py/panel_path_g.py:      self.off = wx.RadioButton(coolant_panel,label='no')
../src/py/panel_path_oms.py:      label = wx.StaticText(self,label='omsに変換')
../src/py/panel_path_oms.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_oms.py:      make = wx.Button(self,label='.omsを読み込む')
../src/py/panel_path_oms.py:      row3_sizer.Add(wx.StaticText(row3_panel,label='速度'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_oms.py:      row5_sizer.Add(wx.StaticText(row5_panel,label='加速度'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_oms.py:      row7_sizer.Add(wx.StaticText(row7_panel,label='周期'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_ord.py:      label = wx.StaticText(self,label='ordに変換')
../src/py/panel_path_ord.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_ord.py:      make = wx.Button(self,label='.ordを読み込む')
../src/py/panel_path_ord.py:      row3_sizer.Add(wx.StaticText(row3_panel,label='lead in/out (mm)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_ord.py:      row3_sizer.Add(wx.StaticText(row3_panel,label='切削クオリティ'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_plt.py:      label = wx.StaticText(self,label='pltに変換')
../src/py/panel_path_plt.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_plt.py:      make = wx.Button(self,label='.pltを読み込む')
../src/py/panel_path_plt.py:      self.conv = wx.RadioButton(dir_panel,label='conventional',style=wx.RB_GROUP)
../src/py/panel_path_plt.py:      self.climb = wx.RadioButton(dir_panel,label='climb')
../src/py/panel_path_plt.py:      row4_sizer.Add(wx.StaticText(row4_panel,label='切削速度 (mm/s)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_plt.py:      row4_sizer.Add(wx.StaticText(row4_panel,label='ジョグの速度 (mm/s')'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_plt.py:      row6_sizer.Add(wx.StaticText(row6_panel,label='スピンドル速度 (RPM)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_plt.py:      row6_sizer.Add(wx.StaticText(row6_panel,label='ジョグの高さ (mm)'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_rml.py:      label = wx.StaticText(self,label='rmlに変換')
../src/py/panel_path_rml.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_rml.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_path_rml.py:      make = wx.Button(self,label='.rmlを読み込む')
../src/py/panel_path_rml.py:      row4_sizer.Add(wx.StaticText(row4_panel,label='スピード (mm/s)'),(0,0),flag=wx.ALIGN_CENTER_HORIZONTAL)
../src/py/panel_path_rml.py:      row4_sizer.Add(wx.StaticText(row4_panel,label='ジョグ (mm)'),(0,1),flag=wx.ALIGN_CENTER_HORIZONTAL)
../src/py/panel_path_rml.py:      row6_sizer.Add(wx.StaticText(row6_panel,label='xの最小値 xmin (mm)'),(0,0),flag=wx.ALIGN_CENTER_HORIZONTAL)
../src/py/panel_path_rml.py:      row6_sizer.Add(wx.StaticText(row6_panel,label='yの最小値 ymin (mm)'),(0,1),flag=wx.ALIGN_CENTER_HORIZONTAL)
../src/py/panel_path_rml.py:      move = wx.Button(self,label='xmin, yminに移動')
../src/py/panel_path_sbp.py:      label = wx.StaticText(self,label='sbpに変換')
../src/py/panel_path_sbp.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_sbp.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_path_sbp.py:      make = wx.Button(self,label='.sbpを読み込む')
../src/py/panel_path_sbp.py:      units_sizer.Add(wx.StaticText(units_panel,label='ファイル単位:'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_sbp.py:      self.inches = wx.RadioButton(units_panel,label='インチ',style=wx.RB_GROUP)
../src/py/panel_path_sbp.py:      self.mm = wx.RadioButton(units_panel,label='mm')
../src/py/panel_path_sbp.py:      self.conv = wx.RadioButton(dir_panel,label='conventional',style=wx.RB_GROUP)
../src/py/panel_path_sbp.py:      self.climb = wx.RadioButton(dir_panel,label='climb')
../src/py/panel_path_sbp.py:      row6_sizer.Add(wx.StaticText(row6_panel,label='切削速度 (mm/s)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_sbp.py:      row6_sizer.Add(wx.StaticText(row6_panel,label='ジョグの速度 (mm/s')'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_sbp.py:      row8_sizer.Add(wx.StaticText(row8_panel,label='スピンドル速度 (RPM)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_sbp.py:      row8_sizer.Add(wx.StaticText(row8_panel,label='ジョグの高さ (mm)'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_snap.py:      label = wx.StaticText(self,label='MTM Snap型式に変換')
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='x y z (mm)'),(0,0),flag=wx.ALIGN_RIGHT)
../src/py/panel_path_snap.py:      zero_xyz_button = wx.Button(mtm_panel,label='xyzの原点設定')
../src/py/panel_path_snap.py:      zero_x_button = wx.Button(mtm_panel,label='xの原点設定')
../src/py/panel_path_snap.py:      zero_y_button = wx.Button(mtm_panel,label='yの原点設定')
../src/py/panel_path_snap.py:      zero_z_button = wx.Button(mtm_panel,label='zの原点設定')
../src/py/panel_path_snap.py:      home_button = wx.Button(mtm_panel,label='始点')
../src/py/panel_path_snap.py:      left_button = wx.Button(mtm_panel,label='左移動')
../src/py/panel_path_snap.py:      back_button = wx.Button(mtm_panel,label='後退')
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='ジョグ'),(3,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER))
../src/py/panel_path_snap.py:      forward_button = wx.Button(mtm_panel,label='前進')
../src/py/panel_path_snap.py:      right_button = wx.Button(mtm_panel,label='右移動')
../src/py/panel_path_snap.py:      up_button = wx.Button(mtm_panel,label='上昇')
../src/py/panel_path_snap.py:      down_button = wx.Button(mtm_panel,label='下降')
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='スピード (mm/s)'),(4,0),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_BOTTOM))
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='ジョグの速度 (mm/s) z (mm)'),(4,2),span=(1,2),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_BOTTOM))
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='スピンドル'),(6,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_snap.py:      spindle_button = wx.Button(mtm_panel,label='スピンドル始動')
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='スピード (rpm)'),(6,2),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_snap.py:      start_button = wx.Button(mtm_panel,label='開始')
../src/py/panel_path_snap.py:      pause_button = wx.Button(mtm_panel,label='一時停止')
../src/py/panel_path_snap.py:      segment_label = wx.StaticText(mtm_panel,label='セグメント')
../src/py/panel_path_snap.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='ポート'),(8,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_snap_apa.py:      label = wx.StaticText(self,label='MTM Snap型式に変換')
../src/py/panel_path_snap_apa.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='x y z (mm)'),(0,0),flag=wx.ALIGN_RIGHT)
../src/py/panel_path_snap_apa.py:      zero_xyz_button = wx.Button(mtm_panel,label='xyzの原点設定')
../src/py/panel_path_snap_apa.py:      zero_x_button = wx.Button(mtm_panel,label='xの原点設定')
../src/py/panel_path_snap_apa.py:      zero_y_button = wx.Button(mtm_panel,label='yの原点設定')
../src/py/panel_path_snap_apa.py:      zero_z_button = wx.Button(mtm_panel,label='zの原点設定')
../src/py/panel_path_snap_apa.py:      home_button = wx.Button(mtm_panel,label='始点')
../src/py/panel_path_snap_apa.py:      left_button = wx.Button(mtm_panel,label='左移動')
../src/py/panel_path_snap_apa.py:      back_button = wx.Button(mtm_panel,label='後退')
../src/py/panel_path_snap_apa.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='ジョグ'),(3,1),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER))
../src/py/panel_path_snap_apa.py:      forward_button = wx.Button(mtm_panel,label='前進')
../src/py/panel_path_snap_apa.py:      right_button = wx.Button(mtm_panel,label='右移動')
../src/py/panel_path_snap_apa.py:      up_button = wx.Button(mtm_panel,label='上昇')
../src/py/panel_path_snap_apa.py:      down_button = wx.Button(mtm_panel,label='下降')
../src/py/panel_path_snap_apa.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='スピード (mm/s)'),(4,0),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_BOTTOM))
../src/py/panel_path_snap_apa.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='ジョグの速度 (mm/s) z (mm)'),(4,2),span=(1,2),flag=(wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_BOTTOM))
../src/py/panel_path_snap_apa.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='スピンドル'),(6,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_snap_apa.py:      spindle_button = wx.Button(mtm_panel,label='スピンドル始動')
../src/py/panel_path_snap_apa.py:      mtm_sizer.Add(wx.StaticText(mtm_panel,label='スピード (rpm)'),(6,2),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_path_snap_apa.py:      start_button = wx.Button(mtm_panel,label='開始')
../src/py/panel_path_snap_apa.py:      pause_button = wx.Button(mtm_panel,label='一時停止')
../src/py/panel_path_snap_apa.py:      segment_label = wx.StaticText(mtm_panel,label='セグメント')
../src/py/panel_path_uni.py:      label = wx.StaticText(self,label='uniに変換')
../src/py/panel_path_uni.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_path_uni.py:      make = wx.Button(self,label='.uniを読み込む')
../src/py/panel_path_uni.py:      row3_sizer.Add(wx.StaticText(row3_panel,label='2D パワー (%)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_uni.py:      row3_sizer.Add(wx.StaticText(row3_panel,label='スピード (%)'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_uni.py:      row5_sizer.Add(wx.StaticText(row5_panel,label='xの最小値 xmin (mm)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_uni.py:      row5_sizer.Add(wx.StaticText(row5_panel,label='yの最小値 ymin (mm)'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_uni.py:      row7_sizer.Add(wx.StaticText(row7_panel,label='3D パワー (%)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_path_uni.py:      row7_sizer.Add(wx.StaticText(row7_panel,label='割合'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png.py:      resize_sizer.Add(wx.StaticText(resize,label='幅 (mm)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png.py:      resize_sizer.Add(wx.StaticText(resize,label='高さ (mm)'),(0,2),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png.py:      resize.prop = wx.CheckBox(resize,label='比例',style=wx.RB_GROUP)
../src/py/panel_png.py:      resize_resize = wx.Button(resize,label='サイズを変更')
../src/py/panel_png.py:      resize_cancel = wx.Button(resize,label='キャンセル')
../src/py/panel_png.py:      label = wx.StaticText(self,label='pngを読み込み')
../src/py/panel_png.py:      button = wx.Button(control_panel,label='.pngを読み込む')
../src/py/panel_png.py:      button = wx.Button(control_panel,label='.pngのサイズを変更')
../src/py/panel_png.py:      button = wx.Button(control_panel,label='.pngを反転')
../src/py/panel_png.py:      self.position= wx.StaticText(self,label="")
../src/py/panel_png.py:      self.info= wx.StaticText(self,label="")
../src/py/panel_png_drl.py:      label = wx.StaticText(self,label='Excellon型式に変換')
../src/py/panel_png_drl.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_png_drl.py:      make = wx.Button(self,label='.drlを読み込む')
../src/py/panel_png_grb.py:      label = wx.StaticText(self,label='Gerber型式に変換')
../src/py/panel_png_grb.py:      self.button = wx.Button(self,label='送信!')
../src/py/panel_png_grb.py:      make = wx.Button(self,label='.grbを読み込む')
../src/py/panel_png_path.py:      label = wx.StaticText(self,label='pathに変換')
../src/py/panel_png_path.py:      make_button = wx.Button(make_panel,label='.pathを読み込む')
../src/py/panel_png_path.py:      make_sizer.Add(wx.StaticText(make_panel,label='型式'),(0,1),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='直径 (mm)'),(0,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='オフセット (埋め尽くすには-1'),(0,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='オーバーラップ (0-1)'),(1,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='誤差 (ピクセル数)'),(1,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='強さ (0-1'),(2,1),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_plane.Add(wx.StaticText(panel_3D_plane,label='直径 (mm)'),(0,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_plane.Add(wx.StaticText(panel_3D_plane,label='オフセット (埋め尽くすには-1'),(0,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_plane.Add(wx.StaticText(panel_3D_plane,label='オーバーラップ (0-1)'),(1,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_plane.Add(wx.StaticText(panel_3D_plane,label='誤差 (ピクセル数)'),(1,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_plane.Add(wx.StaticText(panel_3D_plane,label='強さ (0-1'),(2,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_plane.Add(wx.StaticText(panel_3D_plane,label='z (mm)'),(2,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='直径 (mm)'),(0,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='オフセット (埋め尽くすには-1'),(0,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='オーバーラップ (0-1)'),(1,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='誤差 (ピクセル数)'),(1,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='上面 強さ (0-1)'),(2,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='上面 z (mm)'),(2,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='下面 強さ (0-1)'),(3,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='下面 z (mm)'),(3,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_rough.Add(wx.StaticText(panel_3D_rough,label='切削深さ (mm'),(4,1),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='ツール直径 (mm)'),(0,1),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='オーバーラップ (0-1)'),(1,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='誤差 (ピクセル数)'),(1,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='上面 強さ (0-1)'),(2,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='上面 z (mm)'),(2,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='下面 強さ (0-1)'),(3,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='下面 z (mm)'),(3,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='クリアランス 長さ (mm)'),(4,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish.Add(wx.StaticText(panel_3D_finish,label='クリアランス 直径 (mm)'),(4,3),flag=(wx.ALIGN_LEFT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish_4.Add(wx.StaticText(panel_3D_finish_4,label='方向'),(0,0),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path.py:      sizer_3D_finish_4.Add(wx.StaticText(panel_3D_finish_4,label='型式'),(0,3),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_png_path_halftone.py:      label = wx.StaticText(self,label='halftone pathに変換')
../src/py/panel_png_path_halftone.py:      make = wx.Button(self,label='.pathを読み込む')
../src/py/panel_png_path_halftone.py:      self.sizer.Add(wx.StaticText(self,label='最小スポット半径 (ピクセル数)'),(3,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png_path_halftone.py:      self.sizer.Add(wx.StaticText(self,label='スポットあたりの点の数'),(3,2),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png_path_halftone.py:      self.sizer.Add(wx.StaticText(self,label='最大スポットサイズ (mm')),(4,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png_path_halftone.py:      self.sizer.Add(wx.StaticText(self,label=''),(4,2),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png_path_halftone.py:      self.sizer.Add(wx.StaticText(self,label='列のオフセット (1でスポットサイズ)'),(5,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png_png.py:      label = wx.StaticText(self,label='pngに変換')
../src/py/panel_png_png.py:      make = wx.Button(self,label='.pngを読み込む')
../src/py/panel_png_png.py:      threshold_sizer.Add(wx.StaticText(threshold_panel,label='しきい値 (0-1)'),(0,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_png_png.py:      self.interior = wx.RadioButton(type_panel,label='内部',style=wx.RB_GROUP)
../src/py/panel_png_png.py:      self.distances = wx.RadioButton(type_panel,label='距離')
../src/py/panel_stl.py:      label = wx.StaticText(self,label='stlを読み込み')
../src/py/panel_stl.py:      load = wx.Button(self,label='.stlを読み込む')
../src/py/panel_stl.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_stl_png.py:      label = wx.StaticText(self,label='pngに変換')
../src/py/panel_stl_png.py:      make = wx.Button(self,label='.pngを読み込む')
../src/py/panel_stl_png.py:      units_panel_sizer.Add(wx.StaticText(units_panel,label='stlの単位 (mm/unit)'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_stl_png.py:      res_panel_sizer.Add(wx.StaticText(res_panel,label='pngの解像度 (ピクセル数/mm)'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_stl_png.py:      axis_sizer.Add(wx.StaticText(axis_panel,label='側面:'),(0,0),flag=wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL)
../src/py/panel_stl_png.py:      self.x = wx.RadioButton(axis_panel,label='x',style=wx.RB_GROUP)
../src/py/panel_stl_png.py:      self.X = wx.RadioButton(axis_panel,label='-x')
../src/py/panel_stl_png.py:      self.y = wx.RadioButton(axis_panel,label='y')
../src/py/panel_stl_png.py:      self.Y = wx.RadioButton(axis_panel,label='-y')
../src/py/panel_stl_png.py:      self.z = wx.RadioButton(axis_panel,label='z')
../src/py/panel_stl_png.py:      self.Z = wx.RadioButton(axis_panel,label='-z')
../src/py/panel_stl_png.py:      self.position= wx.StaticText(self,label="")
../src/py/panel_stl_png.py:      self.info = wx.StaticText(self,label="")
../src/py/panel_svg.py:      label = wx.StaticText(self,label='svgを読み込み')
../src/py/panel_svg.py:      load = wx.Button(self,label='.svgを読み込む')
../src/py/panel_svg.py:      rload = wx.Button(self,label='.svgを再読み込み')
../src/py/panel_svg.py:      save = wx.Button(self,label='.svgを保存')
../src/py/panel_svg_path.py:      label = wx.StaticText(self,label='pathに変換')
../src/py/panel_svg_path.py:      make_button = wx.Button(make_panel,label='.pathを読み込む')
../src/py/panel_svg_path.py:      make_sizer.Add(wx.StaticText(make_panel,label='型式'),(0,1),flag=(wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL))
../src/py/panel_svg_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='縮尺'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_svg_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label=''曲線上の点'),(1,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_svg_path.py:      sizer_2D.Add(wx.StaticText(panel_2D,label='パスの解像度'),(1,3),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT))
../src/py/panel_svg_path.py:      self.info_2D = wx.StaticText(panel_2D,label="")
../src/py/panel_svg_path.py:      sizer_3D.Add(wx.StaticText(panel_3D,label='縮尺'),(0,1),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_svg_path.py:      sizer_3D.Add(wx.StaticText(panel_3D,label=''曲線上の点'),(1,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_svg_path.py:      sizer_3D.Add(wx.StaticText(panel_3D,label='パスの解像度'),(1,3),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT))
../src/py/panel_svg_path.py:      sizer_3D.Add(wx.StaticText(panel_3D,label='最小 z 強さ (mm)'),(2,0),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_RIGHT))
../src/py/panel_svg_path.py:      sizer_3D.Add(wx.StaticText(panel_3D,label='最大 z 強さ (mm)'),(2,3),flag=(wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT))
../src/py/panel_svg_path.py:      self.info_3D = wx.StaticText(panel_3D,label="")../src/guis/cad_ui:        self.SetStatus = lambda h: statusText.SetLabel(h)
../src/guis/cad_ui:        self.SetHint = lambda h: syntaxHint.SetLabel(h)
../src/guis/fab:      frame.programs.SetLabel(frame.program)
../src/guis/fab:      frame.programs.SetLabel("定義されていません")
../src/guis/rml_send_gui:        self.origin_label_x.SetLabel("x: %02.01f mm" % (self.xr[0] / RML_UNITS))
../src/guis/rml_send_gui:        self.origin_label_y.SetLabel("y: %02.01f mm" % (self.yr[0] / RML_UNITS))
../src/guis/rml_send_gui:        self.size_label_x.SetLabel("x: %02.01f mm" % (path_xsize / RML_UNITS))
../src/guis/rml_send_gui:        self.size_label_y.SetLabel("y: %02.01f mm" % (path_ysize / RML_UNITS))
../src/guis/rml_send_gui:        self.plunge_label.SetLabel(""進入速度: %01.01f mm/s" % (self.speed_plunge))
../src/guis/rml_send_gui:        self.feed_label.SetLabel("送り速度: %01.01f mm/s" % (self.speed_feed))
../src/guis/rml_send_gui:        self.remaining_label.SetLabel(""残り時間: %02d:%02d s" % (int(self.time_remaining)/60,
../src/guis/rml_send_gui:            self.plunge_label.SetLabel(""進入速度: %01.01f mm/s" % (self.speed_plunge))
../src/guis/rml_send_gui:            self.feed_label.SetLabel("送り速度: %01.01f mm/s" % (self.speed_feed))
../src/guis/rml_send_gui:            self.elapsed_label.SetLabel("経過時間: %02d:%02d s" % 
../src/guis/rml_send_gui:            self.remaining_label.SetLabel(""残り時間: %02d:%02d s" % 
../src/guis/rml_send_gui:            self.status_label.SetLabel("実行中: %s (%d:%02d)" % (self.current_cmd,
../src/guis/rml_send_gui:            self.start_button.SetLabel("終了")
../src/guis/rml_send_gui:            self.status_label.SetLabel("終了しました。")
../src/guis/rml_send_gui:            self.status_label.SetLabel("中断します。Modelaが停止するのを待つか,、ビューモードに切り替えた後UP/DOWNボタンを両押しすることでバッファをクリアして下さい")
../src/guis/rml_send_gui:            self.start_button.SetLabel("")
../src/py/panel_cad_png.py:         self.info.SetLabel(cad_info+info)
../src/py/panel_cad_stl.py:         self.info.SetLabel(cad_info+info)
../src/py/panel_math_png.py:         self.info.SetLabel(info)
../src/py/panel_math_stl.py:         self.info.SetLabel(info)
../src/py/panel_path.py:         self.message.SetLabel('左クリック: パン, スクロール: ズーム')
../src/py/panel_path.py:            self.message.SetLabel('左クリック: パン, スクロール: ズーム, 右クリック: 回転')
../src/py/panel_path.py:            self.message.SetLabel('左クリック: パン, スクロール: ズーム')
../src/py/panel_path_g.py:         self.info.SetLabel(times)
../src/py/panel_path_rml.py:         self.info.SetLabel(times)
../src/py/panel_path_sbp.py:         self.info.SetLabel(times)
../src/py/panel_path_snap.py:            spindle_button.SetLabel('スピンドル停止')
../src/py/panel_path_snap.py:            spindle_button.SetLabel('スピンドル始動')
../src/py/panel_path_snap.py:            start_button.SetLabel('停止')
../src/py/panel_path_snap.py:            pause_button.SetLabel('一時停止')
../src/py/panel_path_snap.py:            start_button.SetLabel('開始')
../src/py/panel_path_snap.py:         segment_label.SetLabel("/"+str(len(lines)-1))
../src/py/panel_path_snap.py:         start_button.SetLabel('開始')
../src/py/panel_path_snap.py:         segment_label.SetLabel("セグメント")
../src/py/panel_path_snap.py:            start_button.SetLabel("開始")
../src/py/panel_path_snap.py:            pause_button.SetLabel("続行")
../src/py/panel_path_snap.py:         left_button.SetLabel('左移動')
../src/py/panel_path_snap.py:         left_button.SetLabel('左移動')
../src/py/panel_path_snap.py:         right_button.SetLabel('右移動')
../src/py/panel_path_snap.py:         right_button.SetLabel('右移動')
../src/py/panel_path_snap.py:         forward_button.SetLabel('前進')
../src/py/panel_path_snap.py:         forward_button.SetLabel('前進')
../src/py/panel_path_snap.py:         back_button.SetLabel('後退')
../src/py/panel_path_snap.py:         back_button.SetLabel('後退')
../src/py/panel_path_snap.py:         up_button.SetLabel('上昇')
../src/py/panel_path_snap.py:         up_button.SetLabel('上昇')
../src/py/panel_path_snap.py:         down_button.SetLabel('下降')
../src/py/panel_path_snap.py:         down_button.SetLabel('下降')
../src/py/panel_path_snap_apa.py:            spindle_button.SetLabel('スピンドル停止')
../src/py/panel_path_snap_apa.py:            spindle_button.SetLabel('スピンドル始動')
../src/py/panel_path_snap_apa.py:            start_button.SetLabel('停止')
../src/py/panel_path_snap_apa.py:            pause_button.SetLabel('一時停止')
../src/py/panel_path_snap_apa.py:            start_button.SetLabel('開始')
../src/py/panel_path_snap_apa.py:         segment_label.SetLabel("/"+str(len(lines)-1))
../src/py/panel_path_snap_apa.py:         start_button.SetLabel('開始')
../src/py/panel_path_snap_apa.py:         segment_label.SetLabel("セグメント")
../src/py/panel_path_snap_apa.py:            start_button.SetLabel("開始")
../src/py/panel_path_snap_apa.py:            pause_button.SetLabel("続行")
../src/py/panel_path_snap_apa.py:         left_button.SetLabel('左移動')
../src/py/panel_path_snap_apa.py:         left_button.SetLabel('左移動')
../src/py/panel_path_snap_apa.py:         right_button.SetLabel('右移動')
../src/py/panel_path_snap_apa.py:         right_button.SetLabel('右移動')
../src/py/panel_path_snap_apa.py:         forward_button.SetLabel('前進')
../src/py/panel_path_snap_apa.py:         forward_button.SetLabel('前進')
../src/py/panel_path_snap_apa.py:         back_button.SetLabel('後退')
../src/py/panel_path_snap_apa.py:         back_button.SetLabel('後退')
../src/py/panel_path_snap_apa.py:         up_button.SetLabel('上昇')
../src/py/panel_path_snap_apa.py:         up_button.SetLabel('上昇')
../src/py/panel_path_snap_apa.py:         down_button.SetLabel('下降')
../src/py/panel_path_snap_apa.py:         down_button.SetLabel('下降')
../src/py/panel_png.py:         self.info.SetLabel(info)
../src/py/panel_png.py:         self.position.SetLabel("x: %.3f mm  y: %.3f mm"%(x,y))
../src/py/panel_stl.py:         self.info.SetLabel(info)
../src/py/panel_stl_png.py:         self.info.SetLabel(info)
../src/py/panel_stl_png.py:            self.position.SetLabel("y: %.3f mm  z: %.3f mm"%(y,z))
../src/py/panel_stl_png.py:            self.position.SetLabel("y: %.3f mm  z: %.3f mm"%(y,z))
../src/py/panel_stl_png.py:            self.position.SetLabel("x: %.3f mm  z: %.3f mm"%(x,z))
../src/py/panel_stl_png.py:            self.position.SetLabel("x: %.3f mm  z: %.3f mm"%(x,z))
../src/py/panel_stl_png.py:            self.position.SetLabel("x: %.3f mm  y: %.3f mm"%(x,y))
../src/py/panel_stl_png.py:            self.position.SetLabel("x: %.3f mm  y: %.3f mm"%(x,y))
../src/py/panel_svg_path.py:            self.info_3D.SetLabel(output)
../src/py/panel_svg_path.py:            self.info_2D.SetLabel(output)