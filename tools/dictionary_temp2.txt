about = menu.Append(wx.ID_ABOUT, '概要',	about = menu.Append(wx.ID_ABOUT, '概要',
exit = menu.Append(wx.ID_EXIT,'Exit\tCtrl+Q',"Terminate the program")	exit = menu.Append(wx.ID_EXIT,'Exit\tCtrl+Q',"Terminate the program")
exportMenu.Append(-1, '.dot','Graphviz用 dotファイルに出力'))	exportMenu.Append(-1, '.dot','Graphviz用 dotファイルに出力'))
exportMenu.Append(-1, '.math','.mathファイルに出力'))	exportMenu.Append(-1, '.math','.mathファイルに出力'))
exportMenu.Append(-1, '.png','画像ファイル(.png)に出力'))	exportMenu.Append(-1, '.png','画像ファイル(.png)に出力'))
exportMenu.Append(-1, '.stl','stlファイルに出力'))	exportMenu.Append(-1, '.stl','stlファイルに出力'))
exportMenu.Append(-1, '.svg','svgファイルに出力'))	exportMenu.Append(-1, '.svg','svgファイルに出力'))
frame.control_panel.defaults.Append('cm')	frame.control_panel.defaults.Append('cm')
frame.control_panel.defaults.Append('mm')	frame.control_panel.defaults.Append('mm')
frame.control_panel.defaults.Append('インチ')	frame.control_panel.defaults.Append('インチ')
frame.control_panel.defaults.Append('プレビュー')	frame.control_panel.defaults.Append('プレビュー')
frame.control_panel.defaults.Append('レンダリング')	frame.control_panel.defaults.Append('レンダリング')
frame.formats.Append("プログラム (.cad)")	frame.formats.Append("プログラム (.cad)")
frame.formats.Append("ボリューム (.gif)")	frame.formats.Append("ボリューム (.gif)")
frame.formats.Append("メッシュ (.stl)")	frame.formats.Append("メッシュ (.stl)")
frame.formats.Append("描画 (.svg)")	frame.formats.Append("描画 (.svg)")
frame.formats.Append("数式 (.math)")	frame.formats.Append("数式 (.math)")
frame.formats.Append("画像 (.png)")	frame.formats.Append("画像 (.png)")
frame.processes.Append("DXF (.dxf)")	frame.processes.Append("DXF (.dxf)")
frame.processes.Append("Encapsulated PostScript (.eps)")	frame.processes.Append("Encapsulated PostScript (.eps)")
frame.processes.Append("Epilog ハーフトーン (.epi)")	frame.processes.Append("Epilog ハーフトーン (.epi)")
frame.processes.Append("Epilog レーザーカッター (.epi)")	frame.processes.Append("Epilog レーザーカッター (.epi)")
frame.processes.Append("Excellon (.drl)")	frame.processes.Append("Excellon (.drl)")
frame.processes.Append("Gコード (.g)")	frame.processes.Append("Gコード (.g)")
frame.processes.Append("MTM Snap")	frame.processes.Append("MTM Snap")
frame.processes.Append("Omax ウォータージェット (.ord)")	frame.processes.Append("Omax ウォータージェット (.ord)")
frame.processes.Append("PostScript ハーフトーン (.eps)")	frame.processes.Append("PostScript ハーフトーン (.eps)")
frame.processes.Append("Resonetics エキシマレーザー (.oms)")	frame.processes.Append("Resonetics エキシマレーザー (.oms)")
frame.processes.Append("Roland ビニールカッター (.camm)")	frame.processes.Append("Roland ビニールカッター (.camm)")
frame.processes.Append("Roland モデラ (.rml)")	frame.processes.Append("Roland モデラ (.rml)")
frame.processes.Append("ShopBot (.sbp)")	frame.processes.Append("ShopBot (.sbp)")
frame.processes.Append("Universal ハーフトーン (.uni)")	frame.processes.Append("Universal ハーフトーン (.uni)")
frame.processes.Append("Universal レーザーカッター (.uni)")	frame.processes.Append("Universal レーザーカッター (.uni)")
frame.processes.Append("ガーバー (.grb)")	frame.processes.Append("ガーバー (.grb)")
frame.processes.Append("メッシュ (.stl)")	frame.processes.Append("メッシュ (.stl)")
frame.processes.Append("画像 (.png)")	frame.processes.Append("画像 (.png)")
libraryMenu.Append(-1, 'cad_shapes','標準形状ライブラリを見る'))	libraryMenu.Append(-1, 'cad_shapes','標準形状ライブラリを見る'))
libraryMenu.Append(-1, 'cad_text','標準テキストライブラリを見る'))	libraryMenu.Append(-1, 'cad_text','標準テキストライブラリを見る'))
menuBar.Append(exportMenu, '出力')	menuBar.Append(exportMenu, '出力')
menuBar.Append(libraryMenu, 'ライブラリ')	menuBar.Append(libraryMenu, 'ライブラリ')
menuBar.Append(menu, 'ファイル')	menuBar.Append(menu, 'ファイル')
menuBar.Append(settingsMenu, 'オプション')	menuBar.Append(settingsMenu, 'オプション')
menuBar.Append(viewMenu, 'ビュー')	menuBar.Append(viewMenu, 'ビュー')
new = menu.Append(wx.ID_NEW, 'New\tCtrl+N', 'Start a new cad file')	new = menu.Append(wx.ID_NEW, 'New\tCtrl+N', 'Start a new cad file')
open = menu.Append(wx.ID_OPEN, 'Open\tCtrl+O', "Open a cad file")	open = menu.Append(wx.ID_OPEN, 'Open\tCtrl+O', "Open a cad file")
reload = menu.Append(-1, 'Reload\tCtrl+R','Reload the current file')	reload = menu.Append(-1, 'Reload\tCtrl+R','Reload the current file')
save = menu.Append(wx.ID_SAVE, 'Save\tCtrl+S', "Save the current file")	save = menu.Append(wx.ID_SAVE, 'Save\tCtrl+S', "Save the current file")
saveas = menu.Append(wx.ID_SAVEAS, 'Save As\tCtrl+Shift+S', "Save the current file")	saveas = menu.Append(wx.ID_SAVEAS, 'Save As\tCtrl+Shift+S', "Save the current file")
self.control_panel.defaults.Append('アクリル')	self.control_panel.defaults.Append('アクリル')
self.control_panel.defaults.Append('インチ, 1/8, ワックス, 仕上げ')	self.control_panel.defaults.Append('インチ, 1/8, ワックス, 仕上げ')
self.control_panel.defaults.Append('インチ, 1/8, ワックス, 荒削り')	self.control_panel.defaults.Append('インチ, 1/8, ワックス, 荒削り')
self.control_panel.defaults.Append('エポキシ')	self.control_panel.defaults.Append('エポキシ')
self.control_panel.defaults.Append('エポキシ')../src/guis/fab	self.control_panel.defaults.Append('エポキシ')../src/guis/fab
self.control_panel.defaults.Append('ビニール')	self.control_panel.defaults.Append('ビニール')
self.control_panel.defaults.Append('ボール紙')	self.control_panel.defaults.Append('ボール紙')
self.control_panel.defaults.Append('ミリメートル, 1/8, ワックス, 仕上げ')	self.control_panel.defaults.Append('ミリメートル, 1/8, ワックス, 仕上げ')
self.control_panel.defaults.Append('ミリメートル, 1/8, ワックス, 荒削り')	self.control_panel.defaults.Append('ミリメートル, 1/8, ワックス, 荒削り')
self.control_panel.defaults.Append('ミリングパス (1/64インチ)')	self.control_panel.defaults.Append('ミリングパス (1/64インチ)')
self.control_panel.defaults.Append('ワックス 仕上げ 切断 (1/8インチ)')	self.control_panel.defaults.Append('ワックス 仕上げ 切断 (1/8インチ)')
self.control_panel.defaults.Append('ワックス 荒削り 切断 (1/8)')	self.control_panel.defaults.Append('ワックス 荒削り 切断 (1/8)')
self.control_panel.defaults.Append('ワックス')	self.control_panel.defaults.Append('ワックス')
self.control_panel.defaults.Append('輪郭を切断 (1/32インチ)')	self.control_panel.defaults.Append('輪郭を切断 (1/32インチ)')
self.control_panel.defaults.Append('輪郭線')	self.control_panel.defaults.Append('輪郭線')
self.control_panel.defaults.Append('銅')	self.control_panel.defaults.Append('銅')
self.control_panel.defaults.Append(ミリングパス (0.010インチ)')	self.control_panel.defaults.Append(ミリングパス (0.010インチ)')
settingsMenu.Append(-1, 'Render\tCtrl+Enter',	settingsMenu.Append(-1, 'Render\tCtrl+Enter',
workflows	workflows
workflows(frame,formats,	workflows(frame,formats,
workflows.has_key(key):	workflows.has_key(key):
workflows= {}	workflows= {}
workflows["drawing (.svg) : Epilog lasercutter (.epi)"] = "make_svg_epi"	workflows["drawing (.svg) : Epilog lasercutter (.epi)"] = "make_svg_epi"
workflows["drawing (.svg) : G-codes (.g)"] = "make_svg_g"	workflows["drawing (.svg) : G-codes (.g)"] = "make_svg_g"
workflows["drawing (.svg) : MTM Snap"] = "make_svg_snap"	workflows["drawing (.svg) : MTM Snap"] = "make_svg_snap"
workflows["drawing (.svg) : Omax waterjet (.ord)"] = "make_svg_ord"	workflows["drawing (.svg) : Omax waterjet (.ord)"] = "make_svg_ord"
workflows["drawing (.svg) : Resonetics excimer (.oms)"] = "make_svg_oms"	workflows["drawing (.svg) : Resonetics excimer (.oms)"] = "make_svg_oms"
workflows["drawing (.svg) : Roland Modela (.rml)"] = "make_svg_rml"	workflows["drawing (.svg) : Roland Modela (.rml)"] = "make_svg_rml"
workflows["drawing (.svg) : Roland vinylcutter (.camm)"] = "make_svg_camm"	workflows["drawing (.svg) : Roland vinylcutter (.camm)"] = "make_svg_camm"
workflows["drawing (.svg) : ShopBot (.sbp)"] = "make_svg_sbp"	workflows["drawing (.svg) : ShopBot (.sbp)"] = "make_svg_sbp"
workflows["drawing (.svg) : Universal lasercutter (.uni)"] = "make_svg_uni"	workflows["drawing (.svg) : Universal lasercutter (.uni)"] = "make_svg_uni"
workflows["expression (.math) : DXF (.dxf)"] = "make_math_dxf"	workflows["expression (.math) : DXF (.dxf)"] = "make_math_dxf"
workflows["expression (.math) : Encapsulated PostScript (.eps)"] = "make_math_eps"	workflows["expression (.math) : Encapsulated PostScript (.eps)"] = "make_math_eps"
workflows["expression (.math) : Epilog lasercutter (.epi)"] = "make_math_epi"	workflows["expression (.math) : Epilog lasercutter (.epi)"] = "make_math_epi"
workflows["expression (.math) : Excellon (.drl)"] = "make_math_drl"	workflows["expression (.math) : Excellon (.drl)"] = "make_math_drl"
workflows["expression (.math) : G-codes (.g)"] = "make_math_g"	workflows["expression (.math) : G-codes (.g)"] = "make_math_g"
workflows["expression (.math) : Gerber (.grb)"] = "make_math_grb"	workflows["expression (.math) : Gerber (.grb)"] = "make_math_grb"
workflows["expression (.math) : Omax waterjet (.ord)"] = "make_math_ord"	workflows["expression (.math) : Omax waterjet (.ord)"] = "make_math_ord"
workflows["expression (.math) : Roland Modela (.rml)"] = "make_math_rml"	workflows["expression (.math) : Roland Modela (.rml)"] = "make_math_rml"
workflows["expression (.math) : Roland vinylcutter (.camm)"] = "make_math_camm"	workflows["expression (.math) : Roland vinylcutter (.camm)"] = "make_math_camm"
workflows["expression (.math) : ShopBot (.sbp)"] = "make_math_sbp"	workflows["expression (.math) : ShopBot (.sbp)"] = "make_math_sbp"
workflows["expression (.math) : Universal lasercutter (.uni)"] = "make_math_uni"	workflows["expression (.math) : Universal lasercutter (.uni)"] = "make_math_uni"
workflows["expression (.math) : mesh (.stl)"] = "make_math_stl"	workflows["expression (.math) : mesh (.stl)"] = "make_math_stl"
workflows["image (.png) : DXF (.dxf)"] = "make_png_dxf"	workflows["image (.png) : DXF (.dxf)"] = "make_png_dxf"
workflows["image (.png) : Encapsulated PostScript (.eps)"] = "make_png_eps"	workflows["image (.png) : Encapsulated PostScript (.eps)"] = "make_png_eps"
workflows["image (.png) : Epilog halftone (.epi)"] = "make_png_epi_halftone"	workflows["image (.png) : Epilog halftone (.epi)"] = "make_png_epi_halftone"
workflows["image (.png) : Epilog lasercutter (.epi)"] = "make_png_epi"	workflows["image (.png) : Epilog lasercutter (.epi)"] = "make_png_epi"
workflows["image (.png) : Excellon (.drl)"] = "make_png_drl"	workflows["image (.png) : Excellon (.drl)"] = "make_png_drl"
workflows["image (.png) : G-codes (.g)"] = "make_png_g"	workflows["image (.png) : G-codes (.g)"] = "make_png_g"
workflows["image (.png) : Gerber (.grb)"] = "make_png_grb"	workflows["image (.png) : Gerber (.grb)"] = "make_png_grb"
workflows["image (.png) : MTM Snap"] = "make_png_snap"	workflows["image (.png) : MTM Snap"] = "make_png_snap"
workflows["image (.png) : Omax waterjet (.ord)"] = "make_png_ord"	workflows["image (.png) : Omax waterjet (.ord)"] = "make_png_ord"
workflows["image (.png) : PostScript halftone (.eps)"] = "make_png_eps_halftone"	workflows["image (.png) : PostScript halftone (.eps)"] = "make_png_eps_halftone"
workflows["image (.png) : Resonetics excimer (.oms)"] = "make_png_oms"	workflows["image (.png) : Resonetics excimer (.oms)"] = "make_png_oms"
workflows["image (.png) : Roland Modela (.rml)"] = "make_png_rml"	workflows["image (.png) : Roland Modela (.rml)"] = "make_png_rml"
workflows["image (.png) : Roland vinylcutter (.camm)"] = "make_png_camm"	workflows["image (.png) : Roland vinylcutter (.camm)"] = "make_png_camm"
workflows["image (.png) : ShopBot (.sbp)"] = "make_png_sbp"	workflows["image (.png) : ShopBot (.sbp)"] = "make_png_sbp"
workflows["image (.png) : Universal halftone (.uni)"] = "make_png_uni_halftone"	workflows["image (.png) : Universal halftone (.uni)"] = "make_png_uni_halftone"
workflows["image (.png) : Universal lasercutter (.uni)"] = "make_png_uni"	workflows["image (.png) : Universal lasercutter (.uni)"] = "make_png_uni"
workflows["image (.png) : image (.png)"] = "make_png_png"	workflows["image (.png) : image (.png)"] = "make_png_png"
workflows["mesh (.stl) : G-codes (.g)"] = "make_stl_g"	workflows["mesh (.stl) : G-codes (.g)"] = "make_stl_g"
workflows["mesh (.stl) : MTM Snap"] = "make_stl_snap"	workflows["mesh (.stl) : MTM Snap"] = "make_stl_snap"
workflows["mesh (.stl) : Roland Modela (.rml)"] = "make_stl_rml"	workflows["mesh (.stl) : Roland Modela (.rml)"] = "make_stl_rml"
workflows["mesh (.stl) : ShopBot (.sbp)"] = "make_stl_sbp"	workflows["mesh (.stl) : ShopBot (.sbp)"] = "make_stl_sbp"
workflows["mesh (.stl) : image (.png)"] = "make_stl_png"	workflows["mesh (.stl) : image (.png)"] = "make_stl_png"
workflows["program (.cad) : DXF (.dxf)"] = "make_cad_dxf"	workflows["program (.cad) : DXF (.dxf)"] = "make_cad_dxf"
workflows["program (.cad) : Encapsulated PostScript (.eps)"] = "make_cad_eps"	workflows["program (.cad) : Encapsulated PostScript (.eps)"] = "make_cad_eps"
workflows["program (.cad) : Epilog lasercutter (.epi)"] = "make_cad_epi"	workflows["program (.cad) : Epilog lasercutter (.epi)"] = "make_cad_epi"
workflows["program (.cad) : Excellon (.drl)"] = "make_cad_drl"	workflows["program (.cad) : Excellon (.drl)"] = "make_cad_drl"
workflows["program (.cad) : G-codes (.g)"] = "make_cad_g"	workflows["program (.cad) : G-codes (.g)"] = "make_cad_g"
workflows["program (.cad) : Gerber (.grb)"] = "make_cad_grb"	workflows["program (.cad) : Gerber (.grb)"] = "make_cad_grb"
workflows["program (.cad) : MTM Snap"] = "make_cad_snap"	workflows["program (.cad) : MTM Snap"] = "make_cad_snap"
workflows["program (.cad) : Omax waterjet (.ord)"] = "make_cad_ord"	workflows["program (.cad) : Omax waterjet (.ord)"] = "make_cad_ord"
workflows["program (.cad) : Roland Modela (.rml)"] = "make_cad_rml"	workflows["program (.cad) : Roland Modela (.rml)"] = "make_cad_rml"
workflows["program (.cad) : Roland vinylcutter (.camm)"] = "make_cad_camm"	workflows["program (.cad) : Roland vinylcutter (.camm)"] = "make_cad_camm"
workflows["program (.cad) : ShopBot (.sbp)"] = "make_cad_sbp"	workflows["program (.cad) : ShopBot (.sbp)"] = "make_cad_sbp"
workflows["program (.cad) : Universal lasercutter (.uni)"] = "make_cad_uni"	workflows["program (.cad) : Universal lasercutter (.uni)"] = "make_cad_uni"
workflows["program (.cad) : image (.png)"] = "make_cad_png"	workflows["program (.cad) : image (.png)"] = "make_cad_png"
workflows["program (.cad) : mesh (.stl)"] = "make_cad_stl"	workflows["program (.cad) : mesh (.stl)"] = "make_cad_stl"
workflows[key]	workflows[key]
